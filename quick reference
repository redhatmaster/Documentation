GIT
--------------
ssh -T git@github.com
git clone <linktorepository>
git status -s
git config --global user.name <username>
git config --global user.mail <email>
git commit -m "<message>"
git pull origin master
git push origin master
git log

JENKINS
---------------
minute hours days month week

GRADLE
---------------
build.gradle # invoked by settings.gradle
{
task taskname()
{}
task taskname(dependson:taskname)
{}
}

gradle build
gradle <task1> <task2>....
gradle task1 -x task2
gradle build --continous
gradle ta(taskname abbrevated)
gradle -b <anotherbuildfile>
gradle -p <anotherprojectdirectory>
gradle -q projects (information about project directories)
gradle -q tasks (info about tasks)
gradle wrapper --gradle-version <version>

gradle build --continouos or -t  --------- continues build

DOCKER
---------------
FROM
MAINTAINER
RUN
CMD - should be one , if multiple last one effects
COPY
ADD
PORT

DOCKER_COMPOSE
---------------
version
services:
<servicename>:
build:
image:
ports:
volume:
command:
dockerfile:
links:
networks:


ANSIBLE
------------------------------------------------------------------------------------------------------------------------------

Ansible - Python .
Ansible uses - YAML code.
Ansible needs Python - 3 for Docker.
Docker-py is to be installed to integrate with ansible.
Ansible needs SSH - Password less to connect to  nodes.
Ansible also connects With password using  : --ask-pass option.
Ansible is agent less.Simple to use.
Ansible configuration file : ansible.cfg is found in the home directory or /etc/ansible/ansible.cfg which contain conf settings,
path vars and its default values.

Ansible needs nodes IP/Hosts to be defined in /etc/ansible/hosts file as: 
--------------------------------------------------------------------------

IP/Host

[group1]
IP/Host
IP/host
...

[group2] 
....
....


Ansible Playbook structure
------------------------------
---
- hosts: ip/hostname
            or
         [groupname] // Which reads from /etc/ansible/hosts file
         
  remote_user: username
  gather_facts: yes/no
  tasks:
    - name: name of the task
      modulename: action
      
    - name: name of another task
      modulename: action
      
...

ATOM is used for YAML code indentation.

Ansible Adhoc Commnads
==================================



Ansible Modules
==================================
setup , gather_facts
vars
debug: var=modulenametoprintallvariables
yum:
 name:
 state:
yum : name={{ items }} state=
   with_items:
    - pkg1
    - pkg2
yum_repository:
        name: docker
        description: docker repo
        baseurl: https://packages.docker.com/1.13/yum/repo/main/centos/7
        gpgcheck: no
msg: "message"
shell: command
get_url:
   url:
   dest:
file:
    path: 
    state: 
    mode: 
    recurse: yes/no
unarchive:
    src:
    dest:
pip
  name:
  state:
fetch : src= dest=
blockinfile:
        path: 
        block: |
           ------
           ------
           -------
docker
   name:
   image:
   state:
   expose:
docker_service
  project_src: pathtodockercomposeanddockerfile
  state:
  debug: yes
  
  
ec2:
        key_name: "{{ keypair }}"
        group: default
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        wait: true
        region: "{{ region }}"
        aws_access_key: AKIAJSHLO5A4R3K5GREA
        aws_secret_key: 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
        count: 1
      register: ec2

LVM 
-----

- name: Create a logical volume of 512m with disks /dev/sda and /dev/sdb
  lvol:
    vg: firefly
    lv: test
    size: 512
         [100%free with allspaceinvg, +100%free extend to allspaceinvg,1024 extend to 1024,100%pv all space in pv,
          80%vg resize to %of vg, 100 reduce to lower (force:yes)]
    shrink: no [ if size should not be reduced]
    pvs: /dev/sda,/dev/sdb
    
    
 
------------------------------------------------------------------------------------------------------------------------------
